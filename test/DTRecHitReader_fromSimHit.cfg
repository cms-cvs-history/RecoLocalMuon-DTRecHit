process PROD = {
	source = PoolSource {
     		 untracked string fileName = 'simevent.root'
     		 untracked int32 maxEvents = 1000
     		 untracked uint32 debugVebosity = 10
     		 untracked bool   debugFlag     = true
		}
 
	module mix = MixingModule {         
                secsource input = PoolRASource {
                                    #vstring fileName = {'simevent_pu.root'}
				   untracked vstring fileNames = {'/afs/cern.ch/user/u/uberthon/public/CMSSW_0_5_0_pre4/src/SimGeneral/MixingModule/test/data/simevent.root'}
                                   # bool random = true
                                   # bool no_reuse = true
                
	        string type = "poisson"
        	double averageNumber = 0
        	int32 minBunch =xxx
        	int32 maxBunch =xxx
		int32 seed = 1234567
               }
        	int32 bunchspace =25
               }

       ######## Caveat! geometry es_source MUST be written before the MagneticField one!
	es_source = XMLIdealGeometryESSource 
		{ #FileInPath GeometryConfiguration = "SimG4Core/Application/test/SimConfiguration.xml"
                  #FileInPath GeometryConfiguration = "Geometry/DTGeometry/test/muonConfiguration.xml"
		   FileInPath GeometryConfiguration="Geometry/CMSCommonData/data/configuration.xml"
		   string rootNodeName = "cms:OCMS"
	 	}

	 es_source magfield = XMLIdealGeometryESSource {
               FileInPath GeometryConfiguration = "SimG4Core/Application/test/FieldConfiguration.xml"
               string rootNodeName ="MagneticFieldVolumes:MAGF"        
               }
        ########

	 es_module = VolumeBasedMagneticFieldESProducer {
 		    double findVolumeTolerance = 0.0
	 	    untracked bool cacheLastVolume = true
	            untracked bool timerOn = false
	}	

	es_module = DTGeometryESModule{}

	module dtdigitizer = DTDigitizer {

	  	bool onlyMuHits = false
	 	bool interpolate = true
  	 	untracked bool debug = true 
  
  	   # Velocity of signal propagation along the wire (cm/ns)
  	   # For the default value
  	   # cfr. CMS-IN 2000-021:   (2.56+-0.17)x1e8 m/s
  	   #      CMS NOTE 2003-17:  (0.244)  m/ns
  		double vPropWire = 24.4

  	   # Dead time for signals on the same wire (number from M. Pegoraro)  
  		double deadTime = 150
  
       	   # further configurable smearing
  		double Smearing = 0.

           # The Synchronization Algo Name. Algos Type= [DTDigiSyncTOFCorr,DTDigiSyncFromTable]
		string SyncName = 'DTDigiSyncTOFCorr'
	   # Its parameters
             	PSet pset = {
		   	      double offset = 500
  		   	      int32 TOFCorrection = 2
		            }
         } 
  
 
   	module rechitbuilder = DTRecHitProducer {
		untracked bool debug = true
		string dtDigiLabel = 'dtdigitizer'
		# The reconstruction algo and its parameter set
		string recAlgo = 'DTLinearDriftAlgo'
		PSet recAlgoConfig = {
			# The module to be used for ttrig synchronization and its paraemter set
			string tTrigMode = 'DTTTrigSyncTOFCorr'
			PSet tTrigModeConfig = {
				untracked bool debug = true
				# The offset to be subtracted to digi times (ns)
				double tTrig = 496
				# The velocity of signal propagation along the wire (cm/ns)
				double vPropWire = 24.4
				# The correction type for TOF
				int32 tofCorrType = 2
				}
			# Drift velocity (cm/ns)		
		        double driftVelocity = 0.00543
			# Times outside this window (ns) are considered as coming from previous BXs
			double minTime = -3
			double maxTime = 415
			# Cell resolution (cm)
			double hitResolution = 0.02
			untracked bool debug = true
			}
	}



	module rechitreader = DTRecHitReader{
		untracked bool debug = true
		untracked string simHitLabel = 'r'
		untracked string recHitLabel = 'rechitbuilder'
		untracked string rootFileName = "DTRecHitPlots.root"
	}	

	path p = {mix,dtdigitizer,rechitbuilder,rechitreader}

}
