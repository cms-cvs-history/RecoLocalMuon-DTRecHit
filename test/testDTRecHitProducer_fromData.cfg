process PROD = {

	#Mapping
	es_source mapping = PoolDBESSource { VPSet toGet = {
                                      {string record = "DTReadOutMappingRcd" 
                                       string tag = "mb3_10_map"}
                                     }
		    		     bool loadAll = true
				     string connect = "sqlite_file:mb3_10.db"
				     untracked string catalog = "file:/afs/cern.ch/cms/Physics/muon/CMSSW/DT/SQLLite/commissioning/mb3/mb3catalog.xml"
			             string timetype = "runnumber" 
				     untracked uint32 authenticationMethod = 0
				     untracked uint32 messagelevel = 0
				   }

	# Event Formatter
	source = DaqSource{ string reader = "DTROS8FileReader"
	   	untracked int32 maxEvents = 1000
			PSet pset = {  string fileName ="/afs/cern.ch/cms/Physics/muon/CMSSW/DT/data/mb3_c12_3089" } 
	}
	
	# Data Unpacker
	module dtunpacker = DTUnpackingModule{ 
		string dataType = "ROS8" }


	
	include "Geometry/MuonCommonData/data/muonIdealGeometryXML.cfi"
	include "Geometry/DTGeometry/data/dtGeometry.cfi"

	
	es_source ttrig = PoolDBESSource {  VPSet toGet = {
                                    {string record = "DTTtrigRcd" 
                                     string tag = "commissioning_tTrig"
                                     } }
		    		     bool loadAll = true
                                     string connect = "sqlite_file:tTrig_W+2+1.db"
                                     untracked string catalog = "file:/afs/cern.ch/cms/Physics/muon/CMSSW/DT/SQLLite/tTrig/tTrig_W+2+1catalog.xml"
			             string timetype = "runnumber" 
				     untracked uint32 authenticationMethod = 0		
                                     untracked uint32 messagelevel = 0
				    }


	es_source t0 = PoolDBESSource {  VPSet toGet = {
                                    {string record = "DTT0Rcd" 
                                     string tag = "commissioning_t0"
                                     } }
		    		     bool loadAll = true
                                     string connect = "sqlite_file:t0_W+2+1.db"
                                     untracked string catalog = "file:/afs/cern.ch/cms/Physics/muon/CMSSW/DT/SQLLite/t0/t0_W+2+1catalog.xml"
			             string timetype = "runnumber" 
				     untracked uint32 authenticationMethod = 0		
                                     untracked uint32 messagelevel = 0
				    }


   	module rechitbuilder = DTRecHitProducer {
		untracked bool debug = true
		# The label to retrieve digis from the event
		string dtDigiLabel = 'dtunpacker'
		# The reconstruction algo and its parameter set
		string recAlgo = 'DTLinearDriftAlgo'
		PSet recAlgoConfig = {
			# The module to be used for ttrig synchronization and its set parameter
			string tTrigMode = 'DTTTrigSyncFromDB'
			PSet tTrigModeConfig = {
				untracked bool debug = true
				}
			# Drift velocity (cm/ns)		
		        double driftVelocity = 0.00543
			# Times outside this window (ns) are considered as coming from previous BXs
			double minTime = -3
			double maxTime = 415
			# Cell resolution (cm)
			double hitResolution = 0.02
			untracked bool debug = true
			}
	}



	module rechitreader = DTRecHitReader{
		untracked bool debug = true
		untracked string simHitLabel = 'r'
		untracked string recHitLabel = 'rechitbuilder'
		untracked string rootFileName = "DTRecHitPlots_fromData.root"
	}	

  
	module out = PoolOutputModule {
        	untracked string fileName ="rechit_commissioning.root"
	}

	path p = {dtunpacker, rechitbuilder, out}

}

